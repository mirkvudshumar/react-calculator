{"version":3,"sources":["App.js","components/Result/Result.js","components/UI/Button/Button.js","components/Buttons/Buttons.js","index.js"],"names":["App","state","equationArr","calculateEquation","equation","result","eval","join","toString","split","setState","error","alert","deleteOne","pop","deleteAll","addNumbersAndOperators","event","push","target","value","onButtonPress","onInputChange","isKey","RegExp","match","length","className","this","Component","props","onSubmit","preventDefault","type","autoFocus","onChange","onKeyDown","key","calculateWithEnterKey","Button","classes","buttonStyle","onClick","clicked","Buttons","keys","map","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2502f8b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport Buttons from './components/Buttons/Buttons';\nimport Result from './components/Result/Result';\n\nclass App extends Component {\n  state = {\n    equationArr: [],\n  };\n\n  calculateEquation = () => {\n    let equation = this.state.equationArr;\n    // It is a simple app, so no danger of using eval\n    try {\n      const result = eval(equation.join(''));\n      equation = result.toString().split('');\n      this.setState({ equationArr: equation });\n    } catch(error) {\n      alert('Error')\n    }\n  };\n\n  deleteOne = () => {\n    let equation = this.state.equationArr;\n    equation.pop();\n    this.setState({ equationArr: equation });\n  };\n\n  deleteAll = () => {\n    let equation = this.state.equationArr;\n    equation = [];\n    this.setState({ equationArr: equation });\n  };\n\n  addNumbersAndOperators = (event) => {\n    let equation = this.state.equationArr;\n    equation.push(event.target.value);\n    this.setState({ equationArr: equation });\n  };\n\n  onButtonPress = (event) => {\n    switch (event.target.value) {\n      case '=':\n        this.calculateEquation();\n        break;\n      case 'C':\n        this.deleteOne();\n        break;\n      case 'AC':\n        this.deleteAll();\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n      case '*':\n      case '/':\n      case '.':\n        this.addNumbersAndOperators(event);\n        break;\n    }\n  };\n\n  // Enable keyboard input\n  onInputChange = (event) => {\n    const equation = event.target.value.toString().split('');\n    const isKey = new RegExp('^[0-9\\.+\\/\\*-]+$');\n    if (event.target.value.match(isKey) || equation.length === 0) {\n      this.setState({ equationArr: equation });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"calculator\">\n        <Result\n          equation={this.state.equationArr}\n          onInputChange={this.onInputChange}\n          calculateEquation={this.calculateEquation}\n        />\n        <Buttons onButtonPress={this.onButtonPress} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nimport './Result.css';\n\nconst result = (props) => {\n  const calculateWithEnterKey = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      props.calculateEquation();\n    }\n  };\n\n  return (\n    <form onSubmit={(event) => event.preventDefault()}>\n      <input\n        type=\"text\"\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        value={props.equation.join('')}\n        onChange={(event) => props.onInputChange(event)}\n        onKeyDown={(event) => calculateWithEnterKey(event)}\n      />\n    </form>\n  );\n};\n\nexport default result;\n","import React from 'react';\n\nimport './Button.css';\n\nconst Button = (props) => {\n  const classes = ['button'];\n  if (props.buttonStyle) {\n    classes.push(props.buttonStyle);\n  }\n\n  return (\n    <div className={classes.join(' ')}>\n      <button type=\"button\" onClick={props.clicked} value={props.value}>\n        {props.value}\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Buttons.css';\nimport Button from '../UI/Button/Button';\n\nconst Buttons = (props) => {\n  let keys = ['AC', 'C', 'M', '+', 9, 8, 7, '-', 6, 5, 4, '*', 3, 2, 1, '/', '.', 0, '='];\n  keys = keys.map((key) => {\n    // Determine how button will look\n    let buttonStyle = null;\n    const operations = ['*', '-', '+', '/'];\n    if (operations.includes(key)) {\n      buttonStyle = 'buttonOperation';\n    } else if (key === '=') {\n      buttonStyle = 'buttonEqual';\n    }\n    return (\n      <Button\n        key={key}\n        value={key}\n        buttonStyle={buttonStyle}\n        clicked={(event) => props.onButtonPress(event)}\n      />\n    );\n  });\n  return <div className=\"buttons\">{keys}</div>;\n};\n\nexport default Buttons;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}