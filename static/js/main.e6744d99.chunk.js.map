{"version":3,"sources":["App.js","components/Result/Result.js","components/UI/Button/Button.js","components/Buttons/Buttons.js","index.js"],"names":["App","state","equationArr","memory","calculateEquation","equation","result","eval","join","toString","split","setState","error","alert","deleteOne","pop","deleteAll","addNumbersAndOperators","event","push","target","value","memorizeEquation","concat","onButtonPress","onInputChange","isKey","RegExp","match","length","className","this","isMemoryFull","Component","props","onSubmit","preventDefault","type","autoFocus","onChange","onKeyDown","key","calculateWithEnterKey","Button","classes","buttonStyle","onClick","clicked","Buttons","keys","map","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6744d99.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport Buttons from './components/Buttons/Buttons';\nimport Result from './components/Result/Result';\n\nclass App extends Component {\n  state = {\n    equationArr: [],\n    memory: null,\n  };\n\n  calculateEquation = () => {\n    let equation = this.state.equationArr;\n    // It is a simple app, so no danger of using eval\n    try {\n      const result = eval(equation.join(''));\n      equation = result.toString().split('');\n      this.setState({ equationArr: equation });\n    } catch (error) {\n      alert('Error');\n    }\n  };\n\n  deleteOne = () => {\n    let equation = this.state.equationArr;\n    equation.pop();\n    this.setState({ equationArr: equation });\n  };\n\n  deleteAll = () => {\n    let equation = this.state.equationArr;\n    equation = [];\n    this.setState({ equationArr: equation });\n  };\n\n  addNumbersAndOperators = (event) => {\n    let equation = this.state.equationArr;\n    equation.push(event.target.value);\n    this.setState({ equationArr: equation });\n  };\n\n  memorizeEquation = () => {\n    if (!this.state.memory) {\n      const memory = this.state.equationArr;\n      this.setState({ equationArr: [], memory: memory });\n    } else if (this.state.memory) {\n      const equation = this.state.equationArr.concat(this.state.memory);\n      this.setState({ equationArr: equation, memory: null });\n    }\n  };\n\n  onButtonPress = (event) => {\n    switch (event.target.value) {\n      case '=':\n        this.calculateEquation();\n        break;\n      case 'C':\n        this.deleteOne();\n        break;\n      case 'AC':\n        this.deleteAll();\n        break;\n      case 'M':\n        this.memorizeEquation();\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n      case '*':\n      case '/':\n      case '.':\n        this.addNumbersAndOperators(event);\n        break;\n    }\n  };\n\n  // Enable keyboard input\n  onInputChange = (event) => {\n    const equation = event.target.value.toString().split('');\n    const isKey = new RegExp('^[0-9.+/*-]+$');\n    if (event.target.value.match(isKey) || equation.length === 0) {\n      this.setState({ equationArr: equation });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"calculator\">\n        <Result\n          equation={this.state.equationArr}\n          onInputChange={this.onInputChange}\n          calculateEquation={this.calculateEquation}\n        />\n        <Buttons\n          onButtonPress={this.onButtonPress}\n          isMemoryFull={this.state.memory}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nimport './Result.css';\n\nconst result = (props) => {\n  const calculateWithEnterKey = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      props.calculateEquation();\n    }\n  };\n\n  return (\n    <form onSubmit={(event) => event.preventDefault()}>\n      <input\n        type=\"text\"\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        value={props.equation.join('')}\n        onChange={(event) => props.onInputChange(event)}\n        onKeyDown={(event) => calculateWithEnterKey(event)}\n      />\n    </form>\n  );\n};\n\nexport default result;\n","import React from 'react';\n\nimport './Button.css';\n\nconst Button = (props) => {\n  const classes = [];\n  if (props.buttonStyle) {\n    classes.push(props.buttonStyle);\n  }\n\n  return (\n    <button\n      className={classes.join(' ')}\n      type=\"button\"\n      onClick={props.clicked}\n      value={props.value}\n    >\n      {props.value}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Buttons.css';\nimport Button from '../UI/Button/Button';\n\nconst Buttons = (props) => {\n  let keys = ['AC', 'C', 'M', '+', 9, 8, 7, '-', 6, 5, 4, '*', 3, 2, 1, '/', '.', 0, '='];\n  keys = keys.map((key) => {\n    // Determine how button will look\n    let buttonStyle = null;\n    const operations = ['*', '-', '+', '/'];\n    if (operations.includes(key)) {\n      buttonStyle = 'buttonOperation';\n    } else if (key === '=') {\n      buttonStyle = 'buttonEqual';\n    } else if (key === 'M') {\n      // eslint-disable-next-line no-unused-expressions\n      props.isMemoryFull ? (buttonStyle = 'memoryFull') : (buttonStyle = '');\n    }\n    return (\n      <Button\n        key={key}\n        value={key}\n        buttonStyle={buttonStyle}\n        clicked={(event) => props.onButtonPress(event)}\n      />\n    );\n  });\n  return <div className=\"buttons\">{keys}</div>;\n};\n\nexport default Buttons;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}